import{_ as i,c as l,a,b as e,o as p,r as d}from"./app-qO4zmEUw.js";const t={};function c(r,s){const n=d("Mermaid");return p(),l("div",null,[s[0]||(s[0]=a(`<h2 id="mermaid是什么" tabindex="-1"><a class="header-anchor" href="#mermaid是什么"><span>mermaid是什么</span></a></h2><p>mermaid 是一个通过纯文本生成图表的 JS 库，任何JS 运行环境都可以解析 mermaid 标记语言以快速展示或者生成图表。甚至目前很多 markdown 编辑器都内置支持 mermaid 语法。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mermaid</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # node.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>而typora也内置了mermaid解析器，可以通过代码块的形式编写mermaid。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>\`\`\`mermaid</span></span>
<span class="line"><span>graph_type ...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>\`\`\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h2><p>一些适用的语法知识点：</p><ul><li><p>单行注释：<code>%% </code>，请不要忘记住%%后必须接空格符</p></li><li><p>在绘制图表前，需要声明图表的类型</p></li><li><p>图表中的unicode文本需要使用双引号包裹起来，最佳实践是所有文本都先使用双引号进行包裹</p></li><li><p>图表中的文本是支持简易markdown语法的，需要使用反引号\`\`包裹起来，并且反引号内是可以识别换行符的。（和js中的反引号概念差不多）</p></li></ul><h2 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h2><p>大部分图，都需要使用节点这个概念，一般节点的表示方式：<code>label[text]</code> 。节点的形状是通过括号来表示的。例如：<code>[]</code>显示方形、<code>()</code>显示操场形等。</p><p>需要注意的是：同名节点最后只会渲染为一个节点，后者形状会覆盖前者。</p><p>节点更简洁的方式是<code>text</code>，不带有方括号则直接将文本当做节点，对于初学者并不推荐这样的写法，非常有迷惑性。</p><p>以下是流程图中的节点形状的表示法。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>flowchart TB</span></span>
<span class="line"><span>%% 方形</span></span>
<span class="line"><span>id1[&quot;node&quot;]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 椭圆形</span></span>
<span class="line"><span>id2(&quot;node&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 子程序</span></span>
<span class="line"><span>program[[&quot;program&quot;]]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 圆柱形</span></span>
<span class="line"><span>database[(database)]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 圆形</span></span>
<span class="line"><span>circle((&quot;circle&quot;))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 菱形</span></span>
<span class="line"><span>diamond{diamond}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 六边形</span></span>
<span class="line"><span>hexagon{{hexagon}}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 各种四边形</span></span>
<span class="line"><span>p1[/p1/]</span></span>
<span class="line"><span>p2[/p2\\]</span></span>
<span class="line"><span>p3[\\p3\\]</span></span>
<span class="line"><span>p4[\\p4/]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 双圈</span></span>
<span class="line"><span>twoCircle(((tc)))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>%% 不对称图形</span></span>
<span class="line"><span>id&gt;text]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)),e(n,{id:"mermaid-55",code:"eJxLy8kvT85ILCpRCHHiUlVVeDZt59O9i7gyUwyjlfLyU1KVYrnAwkvWPp3TBpEx0oDIaIJlnq6d8HxF99Nd/VwFRfnpRYm50dFKUJZSLEQzUOez+RtBmlMSSxKTEotTozVgLE24EpB8cmZRck6qhoYShKGkCbHjRT9Ed2Zibn5eSjWUroXobF37Yh/YzRmpFYnp+XnV1VBGLVTBhJbny3ufzp4NVVZgGK1fYKgfy1VgBGQYxQAZxtExBcYghgmQYQKUAuvr73k6p4OrpDzfGeoqjZJkTaiLnuzofbp+5/PlG57O3gcJFbuS1IoSoE4AZzGIUw=="}),s[1]||(s[1]=a(`<p>在 v11.3.0 版本中引入形状的扩展语法：<code>id@{shape: rect, label: &quot;text&quot;}</code>，更多 shape name 可以去官网查表。</p><p>有了节点的扩展语法，甚至可以引入 icon 或者 img 来表示节点。具体用法见官网。</p><h2 id="节点的连接" tabindex="-1"><a class="header-anchor" href="#节点的连接"><span>节点的连接</span></a></h2><p>大部分图表的节点都需要连接，以流程图为例</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>flowchart LR</span></span>
<span class="line"><span>A --&gt; B</span></span>
<span class="line"><span>C -.-&gt; |note|D</span></span>
<span class="line"><span>E ~~~ |invisible link|F</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)),e(n,{id:"mermaid-69",code:"eJxLy8kvT85ILCpR8AniclTQ1bVTcOJyVtDVAzJq8vJLUmtcuFwV6urqFGoy88oyizOTclIVcjLzsmvcuAAutxMX"}),s[2]||(s[2]=a('<p>遗憾的是，不同图表中的节点，其连接方式的标记语法各不相同，使用时需要自行查阅。</p><h2 id="图表方向" tabindex="-1"><a class="header-anchor" href="#图表方向"><span>图表方向</span></a></h2><p>图表内的节点通常是有延展的方向的，在声明图表类型时可以声明图表的延展方向</p><ul><li>TB - 从顶到底(Top to Bottom)</li><li>TD - 自上而下/从顶到底(Top-down/Top to Bottom)</li><li>BT - 从下到上(Bottom to Top)</li><li>RL - 右到左(Right to Left)</li><li>LR - 左到右(Left to Right)</li></ul><h2 id="常用图表类型" tabindex="-1"><a class="header-anchor" href="#常用图表类型"><span>常用图表类型</span></a></h2><ul><li>flowchart</li><li>sequence</li><li>classDiagram</li><li>xychasrt-beta</li></ul>',6))])}const o=i(t,[["render",c],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/article/cdn7ea3o/","title":"mermaid入门说明","lang":"zh-CN","frontmatter":{"title":"mermaid入门说明","createTime":"2024/01/25 10:06:36","permalink":"/article/cdn7ea3o/","tags":["markdown"]},"headers":[],"readingTime":{"minutes":2.51,"words":754},"git":{"updatedTime":1740041379000,"contributors":[{"name":"mumu","username":"mumu","email":"916284547@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/mumu?v=4","url":"https://github.com/mumu"},{"name":"maxxwellatcher","username":"maxxwellatcher","email":"916284547@qq.com","commits":3,"avatar":"https://avatars.githubusercontent.com/maxxwellatcher?v=4","url":"https://github.com/maxxwellatcher"}]},"filePathRelative":"mermaid.md","categoryList":[]}');export{o as comp,v as data};
